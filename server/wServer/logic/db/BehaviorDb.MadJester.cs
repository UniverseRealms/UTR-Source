#region

using common.resources;
using wServer.logic.behaviors;
using wServer.logic.loot;
using wServer.logic.transitions;

#endregion

namespace wServer.logic
{
    partial class BehaviorDb
    {
        private _ MadJester = () => Behav()
            .Init("Mad Jester",
                new State(
                    new DropPortalOnDeath("Puppet Encore Portal", 1, 60),
                    new ScaleHP(0.3),
                    new State("Wait",
                        new ConditionalEffect(ConditionEffectIndex.Invincible, true),
                        new PlayerWithinTransition(5, "Walk")
                    ),
                    new State("Walk",
                        new Taunt("Ladies and Gentlemen. Boys and Girls! Gather 'round for the show of a lifetime!"),
                        new Wander(0.4),
                        new TimedTransition(5000, "Dance")
                    ),
                    new State("Dance",
                        new Taunt("Please, take a seat! get comfy and enjoy the show... For this will be your last!"),
                        new Wander(0.4),
                        new SetAltTexture(1),
                        new TimedTransition(5000, "StateChooser")
                    ),
                    new State("StateChooser",
                        new ConditionalEffect(ConditionEffectIndex.Invincible),
                        new Taunt("Let's see..."),
                        new TimedTransition(3000, "Shotgun Kiss", true),
                        new TimedTransition(3000, "CardTrickLR", true),
                        new TimedTransition(3000, "Chase", true),
                        new TimedTransition(3000, "Twirl", true),
                        new TimedTransition(3000, "Cripple", true),
                        new TimedTransition(3000, "Cross Shot", true),
                        new HpLessTransition(0.50, "AwakenMask")
                    ),
                    new State("Shotgun Kiss",
                        new Taunt("Shotgun kiss!"),
                        new ConditionalEffect(ConditionEffectIndex.Armored),
                        new ConditionalEffect(ConditionEffectIndex.ArmorBreakImmune),
                        new SetAltTexture(1),
                        new Shoot(200, count: 4, shootAngle: 45, projectileIndex: 5, coolDown: 500, coolDownOffset: 6000),
                        new Shoot(200, count: 14, shootAngle: 3, projectileIndex: 4, predictive: 0.2, coolDown: 400, coolDownOffset: 6000),
                        new Shoot(200, count: 45, shootAngle: 16, projectileIndex: 7, coolDown: 999999, coolDownOffset: 5000),
                        new Shoot(200, count: 45, shootAngle: 16, projectileIndex: 2, coolDown: 999999, coolDownOffset: 5000),
                        new TimedTransition(10000, "StateChooser"),
                        new HpLessTransition(0.50, "AwakenMask")
                    ),
                    new State("CardTrickLR",
                        new Taunt("Pick a Card, Any Card!"),
                        new SetAltTexture(0),
                        new Shoot(200, count: 2, shootAngle: 15, projectileIndex: 3, predictive: 0.2, coolDown: 500),
                        new Shoot(200, count: 15, shootAngle: 5, projectileIndex: 8, fixedAngle: 0, coolDown: 400),
                        new Shoot(200, count: 15, shootAngle: 5, projectileIndex: 8, fixedAngle: 180, coolDown: 400),
                        new TimedTransition(5000, "CardTrickUD"),
                        new HpLessTransition(0.50, "AwakenMask")
                    ),
                    new State("CardTrickUD",
                        new Shoot(200, count: 2, shootAngle: 15, projectileIndex: 3, predictive: 0.2, coolDown: 500),
                        new Shoot(200, count: 15, shootAngle: 5, projectileIndex: 8, fixedAngle: 90, coolDown: 400),
                        new Shoot(200, count: 15, shootAngle: 5, projectileIndex: 8, fixedAngle: 270, coolDown: 400),
                        new TimedTransition(5000, "StateChooser"),
                        new HpLessTransition(0.50, "AwakenMask")
                    ),
                    new State("Cross Shot",
                        new Taunt("Haha! Let's have some fun!"),
                        new ConditionalEffect(ConditionEffectIndex.Armored),
                        new ConditionalEffect(ConditionEffectIndex.ArmorBreakImmune),
                        new SetAltTexture(0),
                        new Shoot(30, count: 4, shootAngle: 90, projectileIndex: 6, predictive: 0.2, coolDown: 1000),
                        new Shoot(30, count: 2, shootAngle: 35, projectileIndex: 4, predictive: 0.2, coolDown: 700),
                        new Shoot(30, count: 3, shootAngle: 135, projectileIndex: 3, predictive: 0.2, coolDown: 2300),
                        new TimedTransition(9000, "StateChooser"),
                        new HpLessTransition(0.50, "AwakenMask")
                    ),
                    new State("Cripple",
                        new Taunt("Let's bring this up a couple notches!"),
                        new ConditionalEffect(ConditionEffectIndex.Armored),
                        new ConditionalEffect(ConditionEffectIndex.ArmorBreakImmune),
                        new SetAltTexture(1),
                        new Shoot(30, count: 10, shootAngle: 36, projectileIndex: 0, predictive: 0.2, coolDown: 1700),
                        new Shoot(30, count: 10, shootAngle: 80, projectileIndex: 8, coolDown: 400, coolDownOffset: 1000),
                        new TimedTransition(5000, "StateChooser"),
                        new HpLessTransition(0.50, "AwakenMask")
                    ),
                    new State("Chase",
                        new Taunt("Come here and give me a hug!"),
                        new Follow(0.7, 20, 1),
                        new Shoot(30, count: 6, shootAngle: 135, projectileIndex: 2, predictive: 0.2, coolDown: 800),
                        new Shoot(30, count: 8, shootAngle: 45, projectileIndex: 1, coolDown: 1000),
                        new SetAltTexture(0),
                        new TimedTransition(9000, "TeleHome"),
                        new HpLessTransition(0.50, "AwakenMask")
                    ),
                    new State("Twirl",
                        new Taunt("Twirl 'round and 'round. Don't get dizzy!"),
                        new SetAltTexture(1),
                        new Wander(0.6),
                        new Shoot(20, count: 2, shootAngle: 5, predictive: 0.2, projectileIndex: 2, coolDown: 600),
                        new Shoot(15, count: 4, shootAngle: 90, fixedAngle: 0, projectileIndex: 4, coolDown: 99999),
                        new Shoot(15, count: 4, shootAngle: 90, fixedAngle: 10, projectileIndex: 4, coolDown: 99999, coolDownOffset: 200),
                        new Shoot(15, count: 4, shootAngle: 90, fixedAngle: 20, projectileIndex: 4, coolDown: 99999, coolDownOffset: 400),
                        new Shoot(15, count: 4, shootAngle: 90, fixedAngle: 30, projectileIndex: 4, coolDown: 99999, coolDownOffset: 600),
                        new Shoot(15, count: 4, shootAngle: 90, fixedAngle: 40, projectileIndex: 4, coolDown: 99999, coolDownOffset: 800),
                        new Shoot(15, count: 4, shootAngle: 90, fixedAngle: 50, projectileIndex: 4, coolDown: 99999, coolDownOffset: 1000),
                        new Shoot(15, count: 4, shootAngle: 90, fixedAngle: 60, projectileIndex: 4, coolDown: 99999, coolDownOffset: 1200),
                        new Shoot(15, count: 4, shootAngle: 90, fixedAngle: 70, projectileIndex: 4, coolDown: 99999, coolDownOffset: 1400),
                        new Shoot(15, count: 4, shootAngle: 90, fixedAngle: 80, projectileIndex: 4, coolDown: 99999, coolDownOffset: 1600),
                        new Shoot(15, count: 4, shootAngle: 90, fixedAngle: 90, projectileIndex: 4, coolDown: 99999, coolDownOffset: 1800),
                        new Shoot(15, count: 4, shootAngle: 90, fixedAngle: 100, projectileIndex: 4, coolDown: 99999, coolDownOffset: 2000),
                        new Shoot(15, count: 4, shootAngle: 90, fixedAngle: 110, projectileIndex: 4, coolDown: 99999, coolDownOffset: 2200),
                        new Shoot(15, count: 4, shootAngle: 90, fixedAngle: 120, projectileIndex: 4, coolDown: 99999, coolDownOffset: 2400),
                        new Shoot(15, count: 4, shootAngle: 90, fixedAngle: 130, projectileIndex: 4, coolDown: 99999, coolDownOffset: 2600),
                        new Shoot(15, count: 4, shootAngle: 90, fixedAngle: 140, projectileIndex: 4, coolDown: 99999, coolDownOffset: 2800),
                        //
                        new Shoot(15, count: 4, shootAngle: 90, fixedAngle: 140, projectileIndex: 4, coolDown: 99999, coolDownOffset: 3000),
                        new Shoot(15, count: 4, shootAngle: 90, fixedAngle: 130, projectileIndex: 4, coolDown: 99999, coolDownOffset: 3200),
                        new Shoot(15, count: 4, shootAngle: 90, fixedAngle: 120, projectileIndex: 4, coolDown: 99999, coolDownOffset: 3400),
                        new Shoot(15, count: 4, shootAngle: 90, fixedAngle: 110, projectileIndex: 4, coolDown: 99999, coolDownOffset: 3600),
                        new Shoot(15, count: 4, shootAngle: 90, fixedAngle: 100, projectileIndex: 4, coolDown: 99999, coolDownOffset: 3800),
                        new Shoot(15, count: 4, shootAngle: 90, fixedAngle: 90, projectileIndex: 4, coolDown: 99999, coolDownOffset: 4000),
                        new Shoot(15, count: 4, shootAngle: 90, fixedAngle: 80, projectileIndex: 4, coolDown: 99999, coolDownOffset: 4200),
                        new Shoot(15, count: 4, shootAngle: 90, fixedAngle: 70, projectileIndex: 4, coolDown: 99999, coolDownOffset: 4400),
                        new Shoot(15, count: 4, shootAngle: 90, fixedAngle: 60, projectileIndex: 4, coolDown: 99999, coolDownOffset: 4800),
                        new Shoot(15, count: 4, shootAngle: 90, fixedAngle: 50, projectileIndex: 4, coolDown: 99999, coolDownOffset: 5000),
                        new Shoot(15, count: 4, shootAngle: 90, fixedAngle: 40, projectileIndex: 4, coolDown: 99999, coolDownOffset: 5200),
                        new Shoot(15, count: 4, shootAngle: 90, fixedAngle: 30, projectileIndex: 4, coolDown: 99999, coolDownOffset: 5400),
                        new Shoot(15, count: 4, shootAngle: 90, fixedAngle: 20, projectileIndex: 4, coolDown: 99999, coolDownOffset: 5600),
                        new Shoot(15, count: 4, shootAngle: 90, fixedAngle: 10, projectileIndex: 4, coolDown: 99999, coolDownOffset: 5800),
                        new Shoot(15, count: 4, shootAngle: 90, fixedAngle: 0, projectileIndex: 4, coolDown: 99999, coolDownOffset: 6000),
                        //
                        new Shoot(15, count: 4, shootAngle: 90, fixedAngle: 0, projectileIndex: 4, coolDown: 99999, coolDownOffset: 6200),
                        new Shoot(15, count: 4, shootAngle: 90, fixedAngle: 10, projectileIndex: 4, coolDown: 99999, coolDownOffset: 6400),
                        new Shoot(15, count: 4, shootAngle: 90, fixedAngle: 20, projectileIndex: 4, coolDown: 99999, coolDownOffset: 6600),
                        new Shoot(15, count: 4, shootAngle: 90, fixedAngle: 30, projectileIndex: 4, coolDown: 99999, coolDownOffset: 6800),
                        new Shoot(15, count: 4, shootAngle: 90, fixedAngle: 40, projectileIndex: 4, coolDown: 99999, coolDownOffset: 7000),
                        new Shoot(15, count: 4, shootAngle: 90, fixedAngle: 50, projectileIndex: 4, coolDown: 99999, coolDownOffset: 7200),
                        new Shoot(15, count: 4, shootAngle: 90, fixedAngle: 60, projectileIndex: 4, coolDown: 99999, coolDownOffset: 7400),
                        new Shoot(15, count: 4, shootAngle: 90, fixedAngle: 70, projectileIndex: 4, coolDown: 99999, coolDownOffset: 7600),
                        new Shoot(15, count: 4, shootAngle: 90, fixedAngle: 80, projectileIndex: 4, coolDown: 99999, coolDownOffset: 7800),
                        new Shoot(15, count: 4, shootAngle: 90, fixedAngle: 90, projectileIndex: 4, coolDown: 99999, coolDownOffset: 8000),
                        new Shoot(15, count: 4, shootAngle: 90, fixedAngle: 100, projectileIndex: 4, coolDown: 99999, coolDownOffset: 8200),
                        new Shoot(15, count: 4, shootAngle: 90, fixedAngle: 110, projectileIndex: 4, coolDown: 99999, coolDownOffset: 8400),
                        new Shoot(15, count: 4, shootAngle: 90, fixedAngle: 120, projectileIndex: 4, coolDown: 99999, coolDownOffset: 8600),
                        new Shoot(15, count: 4, shootAngle: 90, fixedAngle: 130, projectileIndex: 4, coolDown: 99999, coolDownOffset: 8800),
                        new Shoot(15, count: 4, shootAngle: 90, fixedAngle: 140, projectileIndex: 4, coolDown: 99999, coolDownOffset: 9000),
                        //
                        new Shoot(15, count: 4, shootAngle: 90, fixedAngle: 0, projectileIndex: 4, coolDown: 99999, coolDownOffset: 9200),
                        new Shoot(15, count: 4, shootAngle: 90, fixedAngle: 10, projectileIndex: 4, coolDown: 99999, coolDownOffset: 9400),
                        new Shoot(15, count: 4, shootAngle: 90, fixedAngle: 20, projectileIndex: 4, coolDown: 99999, coolDownOffset: 9600),
                        new Shoot(15, count: 4, shootAngle: 90, fixedAngle: 30, projectileIndex: 4, coolDown: 99999, coolDownOffset: 9800),
                        new Shoot(15, count: 4, shootAngle: 90, fixedAngle: 40, projectileIndex: 4, coolDown: 99999, coolDownOffset: 10000),
                        new Shoot(15, count: 4, shootAngle: 90, fixedAngle: 50, projectileIndex: 4, coolDown: 99999, coolDownOffset: 10200),
                        new Shoot(15, count: 4, shootAngle: 90, fixedAngle: 60, projectileIndex: 4, coolDown: 99999, coolDownOffset: 10400),
                        new Shoot(15, count: 4, shootAngle: 90, fixedAngle: 70, projectileIndex: 4, coolDown: 99999, coolDownOffset: 10600),
                        new Shoot(15, count: 4, shootAngle: 90, fixedAngle: 80, projectileIndex: 4, coolDown: 99999, coolDownOffset: 10800),
                        new Shoot(15, count: 4, shootAngle: 90, fixedAngle: 90, projectileIndex: 4, coolDown: 99999, coolDownOffset: 11000),
                        new Shoot(15, count: 4, shootAngle: 90, fixedAngle: 100, projectileIndex: 4, coolDown: 99999, coolDownOffset: 11200),
                        new Shoot(15, count: 4, shootAngle: 90, fixedAngle: 110, projectileIndex: 4, coolDown: 99999, coolDownOffset: 11400),
                        new Shoot(15, count: 4, shootAngle: 90, fixedAngle: 120, projectileIndex: 4, coolDown: 99999, coolDownOffset: 11600),
                        new Shoot(15, count: 4, shootAngle: 90, fixedAngle: 130, projectileIndex: 4, coolDown: 99999, coolDownOffset: 11800),
                        new Shoot(15, count: 4, shootAngle: 90, fixedAngle: 140, projectileIndex: 4, coolDown: 99999, coolDownOffset: 12000),
                        //
                        new Shoot(15, count: 4, shootAngle: 90, fixedAngle: 140, projectileIndex: 4, coolDown: 99999, coolDownOffset: 12200),
                        new Shoot(15, count: 4, shootAngle: 90, fixedAngle: 130, projectileIndex: 4, coolDown: 99999, coolDownOffset: 12400),
                        new Shoot(15, count: 4, shootAngle: 90, fixedAngle: 120, projectileIndex: 4, coolDown: 99999, coolDownOffset: 12600),
                        new Shoot(15, count: 4, shootAngle: 90, fixedAngle: 110, projectileIndex: 4, coolDown: 99999, coolDownOffset: 12800),
                        new Shoot(15, count: 4, shootAngle: 90, fixedAngle: 100, projectileIndex: 4, coolDown: 99999, coolDownOffset: 13000),
                        new Shoot(15, count: 4, shootAngle: 90, fixedAngle: 90, projectileIndex: 4, coolDown: 99999, coolDownOffset: 13200),
                        new Shoot(15, count: 4, shootAngle: 90, fixedAngle: 80, projectileIndex: 4, coolDown: 99999, coolDownOffset: 13400),
                        new Shoot(15, count: 4, shootAngle: 90, fixedAngle: 70, projectileIndex: 4, coolDown: 99999, coolDownOffset: 13600),
                        new Shoot(15, count: 4, shootAngle: 90, fixedAngle: 60, projectileIndex: 4, coolDown: 99999, coolDownOffset: 14000),
                        new Shoot(15, count: 4, shootAngle: 90, fixedAngle: 50, projectileIndex: 4, coolDown: 99999, coolDownOffset: 14200),
                        new Shoot(15, count: 4, shootAngle: 90, fixedAngle: 40, projectileIndex: 4, coolDown: 99999, coolDownOffset: 14400),
                        new Shoot(15, count: 4, shootAngle: 90, fixedAngle: 30, projectileIndex: 4, coolDown: 99999, coolDownOffset: 14600),
                        new Shoot(15, count: 4, shootAngle: 90, fixedAngle: 20, projectileIndex: 4, coolDown: 99999, coolDownOffset: 14800),
                        new Shoot(15, count: 4, shootAngle: 90, fixedAngle: 10, projectileIndex: 4, coolDown: 99999, coolDownOffset: 15000),
                        new Shoot(15, count: 4, shootAngle: 90, fixedAngle: 0, projectileIndex: 4, coolDown: 99999, coolDownOffset: 15200),
                        //
                        new Shoot(15, count: 4, shootAngle: 90, fixedAngle: 0, projectileIndex: 4, coolDown: 99999, coolDownOffset: 15400),
                        new Shoot(15, count: 4, shootAngle: 90, fixedAngle: 10, projectileIndex: 4, coolDown: 99999, coolDownOffset: 15600),
                        new Shoot(15, count: 4, shootAngle: 90, fixedAngle: 20, projectileIndex: 4, coolDown: 99999, coolDownOffset: 15800),
                        new Shoot(15, count: 4, shootAngle: 90, fixedAngle: 30, projectileIndex: 4, coolDown: 99999, coolDownOffset: 16000),
                        new Shoot(15, count: 4, shootAngle: 90, fixedAngle: 40, projectileIndex: 4, coolDown: 99999, coolDownOffset: 16200),
                        new Shoot(15, count: 4, shootAngle: 90, fixedAngle: 50, projectileIndex: 4, coolDown: 99999, coolDownOffset: 16400),
                        new Shoot(15, count: 4, shootAngle: 90, fixedAngle: 60, projectileIndex: 4, coolDown: 99999, coolDownOffset: 16600),
                        new Shoot(15, count: 4, shootAngle: 90, fixedAngle: 70, projectileIndex: 4, coolDown: 99999, coolDownOffset: 16800),
                        new Shoot(15, count: 4, shootAngle: 90, fixedAngle: 80, projectileIndex: 4, coolDown: 99999, coolDownOffset: 17000),
                        new Shoot(15, count: 4, shootAngle: 90, fixedAngle: 90, projectileIndex: 4, coolDown: 99999, coolDownOffset: 17200),
                        new Shoot(15, count: 4, shootAngle: 90, fixedAngle: 100, projectileIndex: 4, coolDown: 99999, coolDownOffset: 17400),
                        new Shoot(15, count: 4, shootAngle: 90, fixedAngle: 110, projectileIndex: 4, coolDown: 99999, coolDownOffset: 17600),
                        new Shoot(15, count: 4, shootAngle: 90, fixedAngle: 120, projectileIndex: 4, coolDown: 99999, coolDownOffset: 17800),
                        new Shoot(15, count: 4, shootAngle: 90, fixedAngle: 130, projectileIndex: 4, coolDown: 99999, coolDownOffset: 18000),
                        new Shoot(15, count: 4, shootAngle: 90, fixedAngle: 140, projectileIndex: 4, coolDown: 99999, coolDownOffset: 18200),
                        new TimedTransition(18400, "TeleHome"),
                        new HpLessTransition(0.50, "AwakenMask")
                    ),
                    new State("AwakenMask",
                        new ConditionalEffect(ConditionEffectIndex.Invincible, true),
                        new ReturnToSpawn(1.5),
                        new Taunt("Come forth masks. Let's give everyone here a night to remember!"),
                        new TimedTransition(4000, "OrderMasks")
                    ),
                    new State("OrderMasks",
                        new Order(15, "White Mask", "Comeforth"),
                        new Order(15, "Dark Mask", "Comeforth"),
                        new TimedTransition(2000, "CheckifDead")
                    ),
                    new State("CheckifDead",
                        new EntitiesNotExistsTransition(25, "PumpUpTheJam", "White Mask", "Dark Mask")
                    ),
                    new State("TeleHome",
                        new Taunt("Hahaha!"),
                        new ConditionalEffect(ConditionEffectIndex.Invincible, true),
                        new TimedTransition(2000, "Teleporting1")
                    ),
                    new State("Teleporting1",
                        new SetAltTexture(2),
                        new TimedTransition(200, "Teleporting3")
                    ),
                    new State("Teleporting3",
                        new SetAltTexture(3),
                        new TimedTransition(200, "Teleporting4")
                    ),
                    new State("Teleporting4",
                        new SetAltTexture(4),
                        new TimedTransition(200, "Teleporting5")
                    ),
                    new State("Teleporting5",
                        new SetAltTexture(5),
                        new TimedTransition(200, "Teleporting6")
                    ),
                    new State("Teleporting6",
                        new SetAltTexture(6),
                        new TimedTransition(200, "Teleporting7")
                    ),
                    new State("Teleporting7",
                        new SetAltTexture(7),
                        new TimedTransition(200, "GoHome")
                    ),
                    new State("GoHome",
                        new ReturnToSpawn(1),
                        new TimedTransition(3000, "Appear1")
                    ),
                    new State("Appear1",
                        new SetAltTexture(5),
                        new TimedTransition(200, "Appear2")
                    ),
                    new State("Appear2",
                        new SetAltTexture(4),
                        new TimedTransition(200, "Appear3")
                    ),
                    new State("Appear3",
                        new SetAltTexture(3),
                        new TimedTransition(200, "Appear4")
                    ),
                    new State("Appear4",
                        new SetAltTexture(2),
                        new TimedTransition(200, "Done")
                    ),
                    new State("Done",
                        new SetAltTexture(0),
                        new TimedTransition(200, "StateChooser")
                    ),
                    new State("PumpUpTheJam",
                        new Taunt("It seems you all aren't having enough fun! Let's kick this up a notch, hahaha!"),
                        new TimedTransition(4000, "StateChooserx2")
                    ),
                    new State("StateChooserx2",
                        new ConditionalEffect(ConditionEffectIndex.Invincible),
                        new Taunt("Heheheh..."),
                        new TimedTransition(3000, "Shotgun Kissx", true),
                        new TimedTransition(3000, "CardTrickLRx", true),
                        new TimedTransition(3000, "Chasex", true),
                        new TimedTransition(3000, "Twirlx", true),
                        new TimedTransition(3000, "Cripplex", true),
                        new TimedTransition(3000, "Cross Shotx", true),
                        new HpLessTransition(0.20, "The Ultimate Show")
                    ),
                    new State("Shotgun Kissx",
                        new Taunt("Shotgun Kiss!"),
                        new ConditionalEffect(ConditionEffectIndex.Armored),
                        new ConditionalEffect(ConditionEffectIndex.ArmorBreakImmune),
                        new SetAltTexture(1),
                        new Shoot(200, count: 4, shootAngle: 45, projectileIndex: 5, coolDown: 500, coolDownOffset: 6000),
                        new Shoot(200, count: 14, shootAngle: 3, projectileIndex: 4, predictive: 0.2, coolDown: 400, coolDownOffset: 6000),
                        new Shoot(200, count: 45, shootAngle: 16, projectileIndex: 7, coolDown: 999999, coolDownOffset: 5000),
                        new Shoot(200, count: 45, shootAngle: 16, projectileIndex: 2, coolDown: 999999, coolDownOffset: 5000),
                        new TimedTransition(10000, "StateChooserx2"),
                        new HpLessTransition(0.20, "The Ultimate Show")
                    ),
                    new State("CardTrickLRx",
                        new Taunt("Pick a Card, Any Card!"),
                        new SetAltTexture(0),
                        new Shoot(200, count: 2, shootAngle: 15, projectileIndex: 3, predictive: 0.2, coolDown: 500),
                        new Shoot(200, count: 3, shootAngle: 45, projectileIndex: 2, predictive: 0.2, coolDown: 1000),
                        new Shoot(200, count: 15, shootAngle: 5, projectileIndex: 8, fixedAngle: 0, coolDown: 400),
                        new Shoot(200, count: 15, shootAngle: 5, projectileIndex: 8, fixedAngle: 180, coolDown: 400),
                        new TimedTransition(5000, "CardTrickUDx"),
                        new HpLessTransition(0.20, "The Ultimate Show")
                    ),
                    new State("CardTrickUDx",
                        new Shoot(200, count: 2, shootAngle: 15, projectileIndex: 3, predictive: 0.2, coolDown: 500),
                        new Shoot(200, count: 3, shootAngle: 45, projectileIndex: 2, predictive: 0.2, coolDown: 1000),
                        new Shoot(200, count: 15, shootAngle: 5, projectileIndex: 8, fixedAngle: 90, coolDown: 400),
                        new Shoot(200, count: 15, shootAngle: 5, projectileIndex: 8, fixedAngle: 270, coolDown: 400),
                        new TimedTransition(5000, "StateChooserx2"),
                        new HpLessTransition(0.20, "The Ultimate Show")
                    ),
                    new State("Cross Shotx",
                        new Taunt("Haha! Let's have some fun!"),
                        new ConditionalEffect(ConditionEffectIndex.Armored),
                        new ConditionalEffect(ConditionEffectIndex.ArmorBreakImmune),
                        new SetAltTexture(0),
                        new Shoot(30, count: 4, shootAngle: 90, projectileIndex: 6, predictive: 0.2, coolDown: 1000),
                        new Shoot(30, count: 4, shootAngle: 60, projectileIndex: 8, predictive: 0.2, coolDown: 2000),
                        new Shoot(30, count: 2, shootAngle: 35, projectileIndex: 4, predictive: 0.2, coolDown: 700),
                        new Shoot(30, count: 3, shootAngle: 135, projectileIndex: 3, predictive: 0.2, coolDown: 2300),
                        new TimedTransition(9000, "StateChooserx2"),
                        new HpLessTransition(0.20, "The Ultimate Show")
                    ),
                    new State("Cripplex",
                        new Taunt("Let's bring this up a couple notches!"),
                        new ConditionalEffect(ConditionEffectIndex.Armored),
                        new ConditionalEffect(ConditionEffectIndex.ArmorBreakImmune),
                        new SetAltTexture(1),
                        new Shoot(30, count: 10, shootAngle: 36, projectileIndex: 0, predictive: 0.2, coolDown: 1700),
                        new Shoot(30, count: 10, shootAngle: 80, projectileIndex: 8, coolDown: 400, coolDownOffset: 1000),
                        new Shoot(30, count: 10, shootAngle: 80, projectileIndex: 5, predictive: 0.5, coolDown: 400, coolDownOffset: 1000),
                        new TimedTransition(5000, "StateChooserx2"),
                        new HpLessTransition(0.20, "The Ultimate Show")
                    ),
                    new State("Chasex",
                        new Taunt("Come here and give me a hug!"),
                        new Follow(0.7, 20, 1),
                        new Shoot(30, count: 6, shootAngle: 135, projectileIndex: 2, predictive: 0.2, coolDown: 800),
                        new Shoot(30, count: 8, shootAngle: 45, projectileIndex: 1, coolDown: 1000),
                        new SetAltTexture(0),
                        new TimedTransition(9000, "TeleHomex2"),
                        new HpLessTransition(0.20, "The Ultimate Show")
                    ),
                    new State("Twirlx",
                        new Taunt("Twirl 'round and 'round. Don't get dizzy!"),
                        new SetAltTexture(1),
                        new Wander(0.6),
                        new Shoot(20, count: 2, shootAngle: 5, predictive: 0.2, projectileIndex: 2, coolDown: 600),
                        new Shoot(15, count: 4, shootAngle: 90, fixedAngle: 0, projectileIndex: 4, coolDown: 99999),
                        new Shoot(15, count: 4, shootAngle: 90, fixedAngle: 10, projectileIndex: 4, coolDown: 99999, coolDownOffset: 200),
                        new Shoot(15, count: 4, shootAngle: 90, fixedAngle: 20, projectileIndex: 4, coolDown: 99999, coolDownOffset: 400),
                        new Shoot(15, count: 4, shootAngle: 90, fixedAngle: 30, projectileIndex: 4, coolDown: 99999, coolDownOffset: 600),
                        new Shoot(15, count: 4, shootAngle: 90, fixedAngle: 40, projectileIndex: 4, coolDown: 99999, coolDownOffset: 800),
                        new Shoot(15, count: 4, shootAngle: 90, fixedAngle: 50, projectileIndex: 4, coolDown: 99999, coolDownOffset: 1000),
                        new Shoot(15, count: 4, shootAngle: 90, fixedAngle: 60, projectileIndex: 4, coolDown: 99999, coolDownOffset: 1200),
                        new Shoot(15, count: 4, shootAngle: 90, fixedAngle: 70, projectileIndex: 4, coolDown: 99999, coolDownOffset: 1400),
                        new Shoot(15, count: 4, shootAngle: 90, fixedAngle: 80, projectileIndex: 4, coolDown: 99999, coolDownOffset: 1600),
                        new Shoot(15, count: 4, shootAngle: 90, fixedAngle: 90, projectileIndex: 4, coolDown: 99999, coolDownOffset: 1800),
                        new Shoot(15, count: 4, shootAngle: 90, fixedAngle: 100, projectileIndex: 4, coolDown: 99999, coolDownOffset: 2000),
                        new Shoot(15, count: 4, shootAngle: 90, fixedAngle: 110, projectileIndex: 4, coolDown: 99999, coolDownOffset: 2200),
                        new Shoot(15, count: 4, shootAngle: 90, fixedAngle: 120, projectileIndex: 4, coolDown: 99999, coolDownOffset: 2400),
                        new Shoot(15, count: 4, shootAngle: 90, fixedAngle: 130, projectileIndex: 4, coolDown: 99999, coolDownOffset: 2600),
                        new Shoot(15, count: 4, shootAngle: 90, fixedAngle: 140, projectileIndex: 4, coolDown: 99999, coolDownOffset: 2800),
                        //
                        new Shoot(15, count: 4, shootAngle: 90, fixedAngle: 140, projectileIndex: 4, coolDown: 99999, coolDownOffset: 3000),
                        new Shoot(15, count: 4, shootAngle: 90, fixedAngle: 130, projectileIndex: 4, coolDown: 99999, coolDownOffset: 3200),
                        new Shoot(15, count: 4, shootAngle: 90, fixedAngle: 120, projectileIndex: 4, coolDown: 99999, coolDownOffset: 3400),
                        new Shoot(15, count: 4, shootAngle: 90, fixedAngle: 110, projectileIndex: 4, coolDown: 99999, coolDownOffset: 3600),
                        new Shoot(15, count: 4, shootAngle: 90, fixedAngle: 100, projectileIndex: 4, coolDown: 99999, coolDownOffset: 3800),
                        new Shoot(15, count: 4, shootAngle: 90, fixedAngle: 90, projectileIndex: 4, coolDown: 99999, coolDownOffset: 4000),
                        new Shoot(15, count: 4, shootAngle: 90, fixedAngle: 80, projectileIndex: 4, coolDown: 99999, coolDownOffset: 4200),
                        new Shoot(15, count: 4, shootAngle: 90, fixedAngle: 70, projectileIndex: 4, coolDown: 99999, coolDownOffset: 4400),
                        new Shoot(15, count: 4, shootAngle: 90, fixedAngle: 60, projectileIndex: 4, coolDown: 99999, coolDownOffset: 4800),
                        new Shoot(15, count: 4, shootAngle: 90, fixedAngle: 50, projectileIndex: 4, coolDown: 99999, coolDownOffset: 5000),
                        new Shoot(15, count: 4, shootAngle: 90, fixedAngle: 40, projectileIndex: 4, coolDown: 99999, coolDownOffset: 5200),
                        new Shoot(15, count: 4, shootAngle: 90, fixedAngle: 30, projectileIndex: 4, coolDown: 99999, coolDownOffset: 5400),
                        new Shoot(15, count: 4, shootAngle: 90, fixedAngle: 20, projectileIndex: 4, coolDown: 99999, coolDownOffset: 5600),
                        new Shoot(15, count: 4, shootAngle: 90, fixedAngle: 10, projectileIndex: 4, coolDown: 99999, coolDownOffset: 5800),
                        new Shoot(15, count: 4, shootAngle: 90, fixedAngle: 0, projectileIndex: 4, coolDown: 99999, coolDownOffset: 6000),
                        //
                        new Shoot(15, count: 4, shootAngle: 90, fixedAngle: 0, projectileIndex: 4, coolDown: 99999, coolDownOffset: 6200),
                        new Shoot(15, count: 4, shootAngle: 90, fixedAngle: 10, projectileIndex: 4, coolDown: 99999, coolDownOffset: 6400),
                        new Shoot(15, count: 4, shootAngle: 90, fixedAngle: 20, projectileIndex: 4, coolDown: 99999, coolDownOffset: 6600),
                        new Shoot(15, count: 4, shootAngle: 90, fixedAngle: 30, projectileIndex: 4, coolDown: 99999, coolDownOffset: 6800),
                        new Shoot(15, count: 4, shootAngle: 90, fixedAngle: 40, projectileIndex: 4, coolDown: 99999, coolDownOffset: 7000),
                        new Shoot(15, count: 4, shootAngle: 90, fixedAngle: 50, projectileIndex: 4, coolDown: 99999, coolDownOffset: 7200),
                        new Shoot(15, count: 4, shootAngle: 90, fixedAngle: 60, projectileIndex: 4, coolDown: 99999, coolDownOffset: 7400),
                        new Shoot(15, count: 4, shootAngle: 90, fixedAngle: 70, projectileIndex: 4, coolDown: 99999, coolDownOffset: 7600),
                        new Shoot(15, count: 4, shootAngle: 90, fixedAngle: 80, projectileIndex: 4, coolDown: 99999, coolDownOffset: 7800),
                        new Shoot(15, count: 4, shootAngle: 90, fixedAngle: 90, projectileIndex: 4, coolDown: 99999, coolDownOffset: 8000),
                        new Shoot(15, count: 4, shootAngle: 90, fixedAngle: 100, projectileIndex: 4, coolDown: 99999, coolDownOffset: 8200),
                        new Shoot(15, count: 4, shootAngle: 90, fixedAngle: 110, projectileIndex: 4, coolDown: 99999, coolDownOffset: 8400),
                        new Shoot(15, count: 4, shootAngle: 90, fixedAngle: 120, projectileIndex: 4, coolDown: 99999, coolDownOffset: 8600),
                        new Shoot(15, count: 4, shootAngle: 90, fixedAngle: 130, projectileIndex: 4, coolDown: 99999, coolDownOffset: 8800),
                        new Shoot(15, count: 4, shootAngle: 90, fixedAngle: 140, projectileIndex: 4, coolDown: 99999, coolDownOffset: 9000),
                        //
                        new Shoot(15, count: 4, shootAngle: 90, fixedAngle: 0, projectileIndex: 4, coolDown: 99999, coolDownOffset: 9200),
                        new Shoot(15, count: 4, shootAngle: 90, fixedAngle: 10, projectileIndex: 4, coolDown: 99999, coolDownOffset: 9400),
                        new Shoot(15, count: 4, shootAngle: 90, fixedAngle: 20, projectileIndex: 4, coolDown: 99999, coolDownOffset: 9600),
                        new Shoot(15, count: 4, shootAngle: 90, fixedAngle: 30, projectileIndex: 4, coolDown: 99999, coolDownOffset: 9800),
                        new Shoot(15, count: 4, shootAngle: 90, fixedAngle: 40, projectileIndex: 4, coolDown: 99999, coolDownOffset: 10000),
                        new Shoot(15, count: 4, shootAngle: 90, fixedAngle: 50, projectileIndex: 4, coolDown: 99999, coolDownOffset: 10200),
                        new Shoot(15, count: 4, shootAngle: 90, fixedAngle: 60, projectileIndex: 4, coolDown: 99999, coolDownOffset: 10400),
                        new Shoot(15, count: 4, shootAngle: 90, fixedAngle: 70, projectileIndex: 4, coolDown: 99999, coolDownOffset: 10600),
                        new Shoot(15, count: 4, shootAngle: 90, fixedAngle: 80, projectileIndex: 4, coolDown: 99999, coolDownOffset: 10800),
                        new Shoot(15, count: 4, shootAngle: 90, fixedAngle: 90, projectileIndex: 4, coolDown: 99999, coolDownOffset: 11000),
                        new Shoot(15, count: 4, shootAngle: 90, fixedAngle: 100, projectileIndex: 4, coolDown: 99999, coolDownOffset: 11200),
                        new Shoot(15, count: 4, shootAngle: 90, fixedAngle: 110, projectileIndex: 4, coolDown: 99999, coolDownOffset: 11400),
                        new Shoot(15, count: 4, shootAngle: 90, fixedAngle: 120, projectileIndex: 4, coolDown: 99999, coolDownOffset: 11600),
                        new Shoot(15, count: 4, shootAngle: 90, fixedAngle: 130, projectileIndex: 4, coolDown: 99999, coolDownOffset: 11800),
                        new Shoot(15, count: 4, shootAngle: 90, fixedAngle: 140, projectileIndex: 4, coolDown: 99999, coolDownOffset: 12000),
                        //
                        new Shoot(15, count: 4, shootAngle: 90, fixedAngle: 140, projectileIndex: 4, coolDown: 99999, coolDownOffset: 12200),
                        new Shoot(15, count: 4, shootAngle: 90, fixedAngle: 130, projectileIndex: 4, coolDown: 99999, coolDownOffset: 12400),
                        new Shoot(15, count: 4, shootAngle: 90, fixedAngle: 120, projectileIndex: 4, coolDown: 99999, coolDownOffset: 12600),
                        new Shoot(15, count: 4, shootAngle: 90, fixedAngle: 110, projectileIndex: 4, coolDown: 99999, coolDownOffset: 12800),
                        new Shoot(15, count: 4, shootAngle: 90, fixedAngle: 100, projectileIndex: 4, coolDown: 99999, coolDownOffset: 13000),
                        new Shoot(15, count: 4, shootAngle: 90, fixedAngle: 90, projectileIndex: 4, coolDown: 99999, coolDownOffset: 13200),
                        new Shoot(15, count: 4, shootAngle: 90, fixedAngle: 80, projectileIndex: 4, coolDown: 99999, coolDownOffset: 13400),
                        new Shoot(15, count: 4, shootAngle: 90, fixedAngle: 70, projectileIndex: 4, coolDown: 99999, coolDownOffset: 13600),
                        new Shoot(15, count: 4, shootAngle: 90, fixedAngle: 60, projectileIndex: 4, coolDown: 99999, coolDownOffset: 14000),
                        new Shoot(15, count: 4, shootAngle: 90, fixedAngle: 50, projectileIndex: 4, coolDown: 99999, coolDownOffset: 14200),
                        new Shoot(15, count: 4, shootAngle: 90, fixedAngle: 40, projectileIndex: 4, coolDown: 99999, coolDownOffset: 14400),
                        new Shoot(15, count: 4, shootAngle: 90, fixedAngle: 30, projectileIndex: 4, coolDown: 99999, coolDownOffset: 14600),
                        new Shoot(15, count: 4, shootAngle: 90, fixedAngle: 20, projectileIndex: 4, coolDown: 99999, coolDownOffset: 14800),
                        new Shoot(15, count: 4, shootAngle: 90, fixedAngle: 10, projectileIndex: 4, coolDown: 99999, coolDownOffset: 15000),
                        new Shoot(15, count: 4, shootAngle: 90, fixedAngle: 0, projectileIndex: 4, coolDown: 99999, coolDownOffset: 15200),
                        //
                        new Shoot(15, count: 4, shootAngle: 90, fixedAngle: 0, projectileIndex: 4, coolDown: 99999, coolDownOffset: 15400),
                        new Shoot(15, count: 4, shootAngle: 90, fixedAngle: 10, projectileIndex: 4, coolDown: 99999, coolDownOffset: 15600),
                        new Shoot(15, count: 4, shootAngle: 90, fixedAngle: 20, projectileIndex: 4, coolDown: 99999, coolDownOffset: 15800),
                        new Shoot(15, count: 4, shootAngle: 90, fixedAngle: 30, projectileIndex: 4, coolDown: 99999, coolDownOffset: 16000),
                        new Shoot(15, count: 4, shootAngle: 90, fixedAngle: 40, projectileIndex: 4, coolDown: 99999, coolDownOffset: 16200),
                        new Shoot(15, count: 4, shootAngle: 90, fixedAngle: 50, projectileIndex: 4, coolDown: 99999, coolDownOffset: 16400),
                        new Shoot(15, count: 4, shootAngle: 90, fixedAngle: 60, projectileIndex: 4, coolDown: 99999, coolDownOffset: 16600),
                        new Shoot(15, count: 4, shootAngle: 90, fixedAngle: 70, projectileIndex: 4, coolDown: 99999, coolDownOffset: 16800),
                        new Shoot(15, count: 4, shootAngle: 90, fixedAngle: 80, projectileIndex: 4, coolDown: 99999, coolDownOffset: 17000),
                        new Shoot(15, count: 4, shootAngle: 90, fixedAngle: 90, projectileIndex: 4, coolDown: 99999, coolDownOffset: 17200),
                        new Shoot(15, count: 4, shootAngle: 90, fixedAngle: 100, projectileIndex: 4, coolDown: 99999, coolDownOffset: 17400),
                        new Shoot(15, count: 4, shootAngle: 90, fixedAngle: 110, projectileIndex: 4, coolDown: 99999, coolDownOffset: 17600),
                        new Shoot(15, count: 4, shootAngle: 90, fixedAngle: 120, projectileIndex: 4, coolDown: 99999, coolDownOffset: 17800),
                        new Shoot(15, count: 4, shootAngle: 90, fixedAngle: 130, projectileIndex: 4, coolDown: 99999, coolDownOffset: 18000),
                        new Shoot(15, count: 4, shootAngle: 90, fixedAngle: 140, projectileIndex: 4, coolDown: 99999, coolDownOffset: 18200),
                        new TimedTransition(18400, "TeleHomex2"),
                        new HpLessTransition(0.20, "The Ultimate Show")
                    ),
                    new State("TeleHomex2",
                        new Taunt("Hahaha!"),
                        new ConditionalEffect(ConditionEffectIndex.Invincible, true),
                        new TimedTransition(2000, "Teleporting1X")
                    ),
                    new State("Teleporting1X",
                        new Shoot(30, count: 8, shootAngle: 45, projectileIndex: 8, coolDown: 1000),
                        new SetAltTexture(2),
                        new TimedTransition(200, "Teleporting3X")
                    ),
                    new State("Teleporting3X",
                        new SetAltTexture(3),
                        new TimedTransition(200, "Teleporting4X")
                    ),
                    new State("Teleporting4X",
                        new SetAltTexture(4),
                        new TimedTransition(200, "Teleporting5X")
                    ),
                    new State("Teleporting5X",
                        new SetAltTexture(5),
                        new TimedTransition(200, "Teleporting6X")
                    ),
                    new State("Teleporting6X",
                        new SetAltTexture(6),
                        new TimedTransition(200, "Teleporting7X")
                    ),
                    new State("Teleporting7X",
                        new SetAltTexture(7),
                        new TimedTransition(200, "GoHomeX")
                    ),
                    new State("GoHomeX",
                        new ReturnToSpawn(1),
                        new TimedTransition(3000, "Appear1X")
                    ),
                    new State("Appear1X",
                        new SetAltTexture(5),
                        new TimedTransition(200, "Appear2X")
                    ),
                    new State("Appear2X",
                        new SetAltTexture(4),
                        new TimedTransition(200, "Appear3X")
                    ),
                    new State("Appear3X",
                        new SetAltTexture(3),
                        new TimedTransition(200, "Appear4X")
                    ),
                    new State("Appear4X",
                        new SetAltTexture(2),
                        new TimedTransition(200, "DoneX")
                    ),
                    new State("DoneX",
                        new SetAltTexture(0),
                        new Shoot(30, count: 8, shootAngle: 45, projectileIndex: 8, coolDown: 1000),
                        new TimedTransition(200, "StateChooserx2")
                    ),
                    new State("The Ultimate Show",
                        new ConditionalEffect(ConditionEffectIndex.Invincible),
                        new ConditionalEffect(ConditionEffectIndex.Armored, true),
                        new ConditionalEffect(ConditionEffectIndex.ArmorBreakImmune, true),
                        new Taunt("It's time... for The Ultimate Show!"),
                        new ChangeSize(5, 150),
                        new TimedTransition(4000, "Rage")
                    ),
                    new State("Rage",
                        new SetAltTexture(0),
                        new Wander(0.2),
                        new Shoot(15, count: 2, shootAngle: 10, projectileIndex: 6, coolDown: 800),
                        new Shoot(200, count: 15, shootAngle: 5, projectileIndex: 8, fixedAngle: 0, coolDown: 400),
                        new Shoot(200, count: 15, shootAngle: 5, projectileIndex: 8, fixedAngle: 90, coolDown: 400),
                        new TimedTransition(10000, "Rage2")
                    ),
                    new State("Rage2",
                        new SetAltTexture(0),
                        new Wander(0.2),
                        new Shoot(15, count: 2, shootAngle: 10, projectileIndex: 6, coolDown: 800),
                        new Shoot(200, count: 15, shootAngle: 5, projectileIndex: 8, fixedAngle: 180, coolDown: 400),
                        new Shoot(200, count: 15, shootAngle: 5, projectileIndex: 8, fixedAngle: 270, coolDown: 400),
                        new TimedTransition(5000, "Rage")
                    )
                ),
                new Threshold(0.01,
                    new ItemLoot("Dagger of Taunts", 0.0084),
                    new ItemLoot("Hide of Delusion", 0.0046),
                    new ItemLoot("Stat Potion Crate", 1),
                    new TierLoot(2, ItemType.Weapon, 0.05),
                    new TierLoot(2, ItemType.Ability, 0.05),
                    new TierLoot(2, ItemType.Armor, 0.05),
                    new TierLoot(2, ItemType.Ring, 0.05),
                    new TierLoot(3, ItemType.Weapon, 0.025),
                    new TierLoot(3, ItemType.Ability, 0.025),
                    new TierLoot(3, ItemType.Armor, 0.025),
                    new TierLoot(3, ItemType.Ring, 0.025),
                    new ItemLoot("Rusted Medium Abilities Chest", 0.00143),
                    new ItemLoot("Eternal Essence", 0.0005)
                )
            )
            .Init("White Mask",
                new State(
                    new ScaleHP(0.3),
                    new State("WaitForOrders",
                        new ConditionalEffect(ConditionEffectIndex.Invincible, true)
                    ),
                    new State("Comeforth",
                        new TimedTransition(200, "Go")
                    ),
                    new State("Go",
                        new ConditionalEffect(ConditionEffectIndex.Invincible),
                        new Orbit(0.5, 3, 15, "Mad Jester"),
                        new Taunt("Haha! Don't worry."),
                        new TimedTransition(10000, "Fight100%")
                    ),
                    new State("Fight100%",
                        new Orbit(0.5, 3, 15, "Mad Jester"),
                        new Shoot(50, count: 8, shootAngle: 45, predictive: 0.2, coolDown: 1000),
                        new EntitiesNotExistsTransition(25, "DarkDead", "Dark Mask"),
                        new HpLessTransition(0.70, "Fight75%")
                    ),
                    new State("Fight75%",
                        new Orbit(0.5, 3, 15, "Mad Jester"),
                        new Shoot(50, count: 8, shootAngle: 45, predictive: 0.2, coolDown: 700),
                        new EntitiesNotExistsTransition(25, "DarkDead", "Dark Mask"),
                        new HpLessTransition(0.50, "Fight50%")
                    ),
                    new State("Fight50%",
                        new Orbit(0.5, 3, 15, "Mad Jester"),
                        new Shoot(50, count: 8, shootAngle: 45, predictive: 0.2, coolDown: 500),
                        new EntitiesNotExistsTransition(25, "DarkDead", "Dark Mask"),
                        new HpLessTransition(0.35, "Fight35%")
                    ),
                    new State("Fight35%",
                        new Orbit(0.5, 3, 15, "Mad Jester"),
                        new Shoot(50, count: 8, shootAngle: 45, predictive: 0.2, coolDown: 400),
                        new EntitiesNotExistsTransition(25, "DarkDead", "Dark Mask"),
                        new HpLessTransition(0.05, "Fight5%")
                    ),
                    new State("Fight5%",
                        new Orbit(0.5, 3, 15, "Mad Jester"),
                        new Shoot(50, count: 8, shootAngle: 45, predictive: 0.2, coolDown: 400)
                    ),
                    new State("DarkDead",
                        new ChangeSize(5, 150),
                        new Flash(0xfFF0000, 1, 9000001),
                        new ConditionalEffect(ConditionEffectIndex.Invincible),
                        new Taunt("She may be dead... But the show must go on!"),
                        new TimedTransition(3000, "FightDD")
                    ),
                    new State("FightDD",
                        new Orbit(0.5, 3, 15, "Mad Jester"),
                        new Shoot(50, count: 8, shootAngle: 45, projectileIndex: 1, predictive: 0.2, coolDown: 400)
                    )
                )
            )
            .Init("Dark Mask",
                new State(
                    new ScaleHP(0.3),
                    new State("WaitForOrders",
                        new ConditionalEffect(ConditionEffectIndex.Invincible, true)
                    ),
                    new State("Comeforth",
                        new TimedTransition(200, "Go")
                    ),
                    new State("Go",
                        new Orbit(0.5, 3, 15, "Mad Jester"),
                        new TimedTransition(300, "Go(Speak)")
                    ),
                    new State("Go(Speak)",
                        new ConditionalEffect(ConditionEffectIndex.Invincible),
                        new Orbit(0.5, 3, 15, "Mad Jester"),
                        new Taunt("The show is only just beginning..."),
                        new TimedTransition(9700, "Fight100%")
                    ),
                    new State("Fight100%",
                        new Orbit(0.5, 3, 15, "Mad Jester"),
                        new Shoot(50, count: 8, shootAngle: 45, predictive: 0.2, coolDown: 1000),
                        new EntitiesNotExistsTransition(25, "WhiteDead", "White Mask"),
                        new HpLessTransition(0.70, "Fight75%")
                    ),
                    new State("Fight75%",
                        new Orbit(0.5, 3, 15, "Mad Jester"),
                        new Shoot(50, count: 8, shootAngle: 45, predictive: 0.2, coolDown: 700),
                        new EntitiesNotExistsTransition(25, "WhiteDead", "White Mask"),
                        new HpLessTransition(0.50, "Fight50%")
                    ),
                    new State("Fight50%",
                        new Orbit(0.5, 3, 15, "Mad Jester"),
                        new Shoot(50, count: 8, shootAngle: 45, predictive: 0.2, coolDown: 500),
                        new EntitiesNotExistsTransition(25, "WhiteDead", "White Mask"),
                        new HpLessTransition(0.35, "Fight35%")
                    ),
                    new State("Fight35%",
                        new Orbit(0.5, 3, 15, "Mad Jester"),
                        new Shoot(50, count: 8, shootAngle: 45, predictive: 0.2, coolDown: 400),
                        new EntitiesNotExistsTransition(25, "WhiteDead", "White Mask"),
                        new HpLessTransition(0.05, "Fight5%")
                    ),
                    new State("Fight5%",
                        new Orbit(0.5, 3, 15, "Mad Jester"),
                        new EntitiesNotExistsTransition(25, "WhiteDead", "White Mask"),
                        new Shoot(50, count: 8, shootAngle: 45, predictive: 0.2, coolDown: 400)
                    ),
                    new State("WhiteDead",
                        new ChangeSize(5, 150),
                        new Flash(0xfFF0000, 1, 9000001),
                        new ConditionalEffect(ConditionEffectIndex.Invincible),
                        new Taunt("He may be dead... But the show must go on!"),
                        new TimedTransition(3000, "FightWD")
                    ),
                    new State("FightWD",
                        new Orbit(0.5, 3, 15, "Mad Jester"),
                        new Shoot(50, count: 8, shootAngle: 45, projectileIndex: 1, predictive: 0.2, coolDown: 400)
                    )
                )
            );
    }
}